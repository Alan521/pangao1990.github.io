<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[微信小程序如何获取屏幕的高度和宽度]]></title>
    <url>%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%B1%8F%E5%B9%95%E7%9A%84%E9%AB%98%E5%BA%A6%E5%92%8C%E5%AE%BD%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[微信小程序如何获取屏幕的高度和宽度 方法一：12var windowHeight = wx.getSystemInfoSync().windowHeightvar windowWidth = wx.getSystemInfoSync().windowWidth 方法二： 1234.windowHeightWidthClass &#123; height: 100vh; width: 100vw;&#125; CSS3中的 vh 和 vw 是相对于屏幕大小的单位，即：vh =&gt; view heightvw =&gt; view width]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown从入门到精通]]></title>
    <url>%2FMarkdown%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%2F</url>
    <content type="text"><![CDATA[标题 主标题:【语法】 1主标题文字 (空行) ==（两个及以上） 【示例】12主标题文字（最高阶标题）== 主标题文字（最高阶标题） 【说明】相当于H1大纲标题效果，一般在首行应用和表示 副标题：【语法】 1副标题文字 (空行) --(减号两个及以上) 【示例】12主标题文字（第二阶标题）-- 主标题文字（第二阶标题） 【说明】相当于H2大纲标题效果 H1~H6大纲标题:【语法】 1# (空格)文字 1-6等级分别在文字前加对应数量#，后面的#为可选，不加效果也一样。 【示例】12345678910111213# 大纲标题文字 H1（等同 主标题）## 大纲标题文字 H2（等同 副标题）### 大纲标题文字 H3#### 大纲标题文字 H4##### 大纲标题文字 H5###### 大纲标题文字 H6####### 大纲标题文字 H7（最多6阶） 大纲标题文字 H1（等同 主标题）大纲标题文字 H2（等同 副标题）大纲标题文字 H3大纲标题文字 H4大纲标题文字 H5大纲标题文字 H6####### 大纲标题文字 H7（最多6阶） 【说明】最多6个等级的大纲标题，后面加上同等数量“（空格）#”效果也一样 标签 【语法】 1TAGS：内容 或 标签： 内容 在编辑区任意行的列首位置输入tags/标签：关键词1 关键词2 ， 多个用空格隔开。 【示例】1标签：教程 Markdown 标签：教程 Markdown 目录（大纲）导航 【语法】 1在段落中填写 [TOC] （toc小写也可以）以显示各标题为结构的目录（大纲）导航。 强调或突出 斜体：【语法】 1_斜体_ 或 *斜体* 在文字两边加 单下底线 或 单星号 【示例】 1_斜体_ 或 *斜体* _斜体_ 或 斜体 粗体：【语法】 1__粗体__ 或 **粗体** 在文字两边加 双下底线 或 双星号 【示例】 1__粗体__ 或 **粗体** 粗体 或 粗体 删除线： 【语法】 1~~删除线~~ 在文字两边加 双波浪号 【示例】 1这是带有 ~~删除线~~ 的文字 这是带有 删除线 的文字 【说明】快速记忆：单斜双粗两波删 下划线： 【语法】 1在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题） 【示例】 1234这是下划线---你看到了吗？ 这是下划线 你看到了吗？ 段落与分割 普通段落：【语法】 1用空行分隔，连着多个空行也是一个效果，只能空一行的间距。 【示例】 123456这是首行文字这是尾行文字，实际中间我空了2行，但还是只显示空了一行的效果。【说明】有的语法要用到空行才有效果（如主标题，列表），不空行的话默认又是会跟随上面语法特征（如表格语法前面就要空行后才有效果），应用时多加注意。 这是首行文字 这是尾行文字，实际中间我空了2行，但还是只显示空了一行的效果。 【说明】有的语法要用到空行才有效果（如主标题，列表），不空行的话默认又是会跟随上面语法特征（如表格语法前面就要空行后才有效果），应用时多加注意。 水平分割线： 【语法】13个及以上的 星号***或 减号---或 下底线___来表示。 【示例】1*** 【说明】建议只固定选用一个，如三个星号***为标准，用减号—容易和副标题搞混。 强制换行：【语法】 1在行尾输入两个空格 【示例】 123这句话(空格)(空格)会(空格)(空格)换行 这句话会换行 【说明】强制换行比输入回车换行的行间距小很多 链接 网页链接（内联风格）：【语法】 1[链接文字](http://链接地址)&quot;（空格）鼠标悬停显示文字（可选）&quot; “（空格）鼠标悬停显示文字”非必须项，在pc浏览器中能看到效果，手机移动端因无鼠标效果无法直接体现。 【示例】1这是去往[本人博客](https://pangao1990.github.io)的链接。 这是去往本人博客的链接。 链接的快速定义：【语法】 1234567前面文档中引用链接的语法为：[链接文字][id]前后id要匹配一致，一般为数字，这样可以在文档的其他任意地方快速插入这个链接。后面定义链接的语法为：[id]:（空格）http://链接地址（空格）&quot;鼠标悬停显示文字（可选）&quot;后面的语法必须在列首并单独一行，适合前期不知道网址，后面再加入的情况。 【示例】 123这是去往[本人博客][1]的链接。[1]: https://pangao1990.github.io 这是去往本人博客的链接。 链接的自动展示：直接输入链接地址，可以直接识别。https://pangao1990.github.io Email 链接：【语法】 1直接&lt;邮箱号地址&gt;即可 【示例】 1我的email地址是：&lt;pangao1990@qq.com&gt;。 我的email地址是：&#x70;&#97;&#x6e;&#103;&#x61;&#x6f;&#49;&#57;&#57;&#48;&#64;&#113;&#x71;&#46;&#99;&#111;&#x6d;。 列表 有序列表：【语法】 1直接数字加英文句点加空格（最多三个空格）和文字 【示例】有序单层列表 123520. 列表项1（第一项数字一定要为“520”）201314. 列表项2（其实我前面的标的数字是“201314”）20161130. 列表项3（其实我前面的标的数字是“20161130” 列表项1（第一项数字一定要为“520”） 列表项2（其实我前面的标的数字是“201314”） 列表项3（其实我前面的标的数字是“20161130” 【说明】后面的不必在意数字从小到大的排序，显示时会自动排序，有智能的乱序纠正功能，非常贴心。数字前面加了空格，排序会变成罗马数字形式。 无序列表:【语法】 1文字前面加 星号空格*（空格）或 短横空格-（空格）或 加号+（空格）表示 【示例】无序单层列表 12- 列表项1- 列表项2 列表项1 列表项2 多重列表:【语法】 1单层列表项缩进1个tab就可以往后面叠加子层的列表 【示例】12345678910111. 首层列表项（有序）2. 第二层列表项1(嵌套的列表可以是有序的 )2. 第二层列表项2(格式和正常的有序、无序列表没有差异)3. 第三层列表项(tab)1. 三层的子列表项1(tab)2. 三层的子列表项2- 首层列表项第四层列表项2（无序）- 嵌套的列表可以是无序的(tab)- 子列表项 1（加了1个tab缩进）(tab)(tab)- 子列表项 2（加了2个tab缩进）(tab)(tab)(tab)- 子列表项 4（加了3个tab缩进） 首层列表项（有序） 第二层列表项1(嵌套的列表可以是有序的 ) 第二层列表项2(格式和正常的有序、无序列表没有差异) 第三层列表项 三层的子列表项1 三层的子列表项2 首层列表项第四层列表项2（无序） 嵌套的列表可以是无序的 子列表项 1（加了1个tab缩进） 子列表项 2（加了2个tab缩进） 子列表项 4（加了3个tab缩进） 引用 文字引用：【语法】 1段落前面添加大于号和空格&gt; （空格），就能够形成引用段落。 【示例】 123&gt;(空格)青松(空格)(空格)大雪压青松，青松挺且直。(空格)(空格)要知松高洁，待到雪化时。 青松大雪压青松，青松挺且直。要知松高洁，待到雪化时。 添加影像附件 插入图片:【语法】 1![图片描述](图片网络/本地图片地址)（空格）“鼠标悬停显示文字（可选）” 【说明】和网页链接用法一致。 代码块 行内（内联）代码【语法】 12使用`内容` 表示行内 代码块。即 在文字左右使用反引号包含（键盘数字“1”前面的波浪号大写状态时能打出）。 【示例】 1我是一只`小鸭子`，咿呀咿呀哟。 我是一只小鸭子，咿呀咿呀哟。 【说明】和标签/关键词的效果差不多，还可用于如按键Ctrl+F4，字母B，单词F**K、短句Are you ok？等诸多行的应用场景。能起到强调区分的作用。 段落文本代码块:【语法】 1每行缩进4个空格或 1个 Tab表示 【示例】 1(tab)这是一个代码块。 这是一个代码块。]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之新增看板娘(能说话、能换装)]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98(%E8%83%BD%E8%AF%B4%E8%AF%9D%E3%80%81%E8%83%BD%E6%8D%A2%E8%A3%85)%2F</url>
    <content type="text"><![CDATA[效果图： 教程： 小白水平： hexo的官方是支持看板娘的，已经封装好了插件，但只是模型，不能说话、不能换装、功能较少。 安装模块，如下： 1npm install --save hexo-helper-live2d 在 站点配置文件 或 主题配置文件 中新增如下内容： 12345678910111213141516171819202122232425# Live2D## https://github.com/EYHN/hexo-helper-live2dlive2d: enable: true # enable: false scriptFrom: local # 默认 pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径) pluginJsPath: lib/ # 脚本文件相对与插件根目录路径 pluginModelPath: assets/ # 模型文件相对与插件根目录路径 # scriptFrom: jsdelivr # jsdelivr CDN # scriptFrom: unpkg # unpkg CDN # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中 debug: false # 调试, 是否在控制台输出日志 model: use: live2d-widget-model-wanko # npm-module package name # use: wanko # 博客根目录/live2d_models/ 下的目录名 # use: ./wives/wanko # 相对于博客根目录的路径 # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url display: position: right width: 150 height: 300 mobile: show: true # 手机中是否展示 小白水平，效果如下： 大神水平： 大神作品，功能齐全。能说话、能换装、能玩游戏、能拍照、还能自定义。 下载 张书樵大神的项目，解压到本地博客目录的themes/next/source下，修改autoload.js文件，如下：将 1const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;; 改为 1const live2d_path = &quot;/live2d-widget/&quot;; 在/themes/next/layout/_layout.swing中,新增如下内容： 1&lt;script src=&quot;/live2d-widget/autolload.js&quot;&gt;&lt;/script&gt; 在 主题配置文件 中,新增如下内容： 12live2d: enable: true 想修改看板娘大小、位置、格式、文本内容等，可查看并修改 waifu-tips.js 、 waifu-tips.json 和 waifu.css。 大神水平，效果如下：]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之文末统一添加“本文结束”标记]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%87%E6%9C%AB%E7%BB%9F%E4%B8%80%E6%B7%BB%E5%8A%A0%E2%80%9C%E6%9C%AC%E6%96%87%E7%BB%93%E6%9D%9F%E2%80%9D%E6%A0%87%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[效果图： 教程： 在目录 themes/next/layout/_macro/ 下添加 passage-end-tag.swig ，内容如下： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;------ 本文结束------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 打开 themes/next/layout/_macro/post.swig 文件，新增内容如下: 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125; &lt;/div&gt; 打开主题配置文件 ，添加代码如下： 123# 文章末尾添加“本文结束”标记passage_end_tag:enabled: true]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之自定义文章底部版权声明]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E%2F</url>
    <content type="text"><![CDATA[效果图： 教程： 在目录 themes/next/layout/_macro/ 下添加 my-copyright.swig ，内容如下： 123456789101112131415161718192021222324252627282930313233&#123;% if page.copyright %&#125;&lt;div class=&quot;my_post_copyright&quot;&gt; &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:mm:ss&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:mm:ss&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class=&quot;copy-path&quot; title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot; aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard(&apos;.fa-clipboard&apos;); clipboard.on(&apos;success&apos;, $(function()&#123; $(&quot;.fa-clipboard&quot;).click(function()&#123; swal(&#123; title: &quot;&quot;, text: &apos;复制成功&apos;, html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;)); &lt;/script&gt;&#123;% endif %&#125; 在目录 themes/next/source/css/_common/components/post/ 下添加 my-post-copyright.styl，内容如下: 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #333333; // title color font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #0593d3; // link color text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 修改 themes/next/layout/_macro/post.swig ，如下：在代码 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include &apos;wechat-subscriber.swig&apos; %&#125; &lt;/div&gt;&#123;% endif %&#125; 之前，新增如下代码：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;my-copyright.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 打开 themes/next/source/css/_common/components/post/post.styl 文件，在最后一行增加代码： 1@import &quot;my-post-copyright&quot; 设置新建文章自动开启 copyright ，即新建文章自动显示自定义的版权声明，设置 ～/scaffolds/post.md 文件，如下： 12345---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;copyright: true #新增,开启---]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之显示当前浏览进度]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%B5%8F%E8%A7%88%E8%BF%9B%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[效果图： 教程： 打开 themes/next/_config.yml ,搜索关键字 scrollpercent ,把 false 改为 true ，如下： 12# Scroll percent label in b2t button scrollpercent: true 如果想把 top 按钮放在侧边栏,打开 themes/next/_config.yml ,搜索关键字 b2t ,把 false 改为 true ，如下： 12345# Back to top in sidebar b2t: true # Scroll percent label in b2t button scrollpercent: true]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之评论系统]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[效果图： Valine 诞生于2017年8月7日，是一款基于Leancloud的快速、简洁且高效的无后端评论系统。 教程： 登录 Leancloud 官网，注册之后创建一个应用，选择【设置】-&gt;【应用Key】记下你的APP ID和APP Key，如下： 编辑 主题配置文件，搜索 Valine，填入appid 和 appkey，如下： 123456789101112valine: enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version. appid: # your app id appkey: # your app key notify: true # 评论回复邮件提醒, See: https://github.com/xCss/Valine/wiki verify: false # 验证码服务 placeholder: 留言区 # 评论框占位提示符 avatar: mm # 头像配置 guest_info: nick,mail,link # 回复要填写的信息 pageSize: 10 # 评论列表分页，每页条数 visitor: false # 文章访问量统计 comment_count: true # if false, comment count will only be displayed in post page, not in home page 可选操作： 在【Leancloud】 -&gt; 【设置】 -&gt; 【安全中心】 -&gt; 【Web 安全域名】把你的域名加进去，可防止数据被篡改。]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之搜索服务]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[效果图： 教程： 安装插件hexo-generator-searchdb，如下： 1npm install hexo-generator-searchdb --save 编辑 站点配置文件，新增以下内容到任意位置，如下： 12345search: path: search.xml field: post format: html limit: 10000 编辑 主题配置文件，启用本地搜索功能，如下： 123# Local searchlocal_search: enable: true]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AdobePhotoshopCC2019-图形处理中文完美Mac版]]></title>
    <url>%2FAdobePhotoshopCC2019-%E5%9B%BE%E5%BD%A2%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%87%E5%AE%8C%E7%BE%8EMac%E7%89%88%2F</url>
    <content type="text"><![CDATA[简介：Adobe Photoshop CC 2019是数字图像处理和编辑的行业标准，提供了一整套专业的修饰工具，并拥有强大的编辑功能，旨在激发灵感。 教程：压缩包内含详细教程。 下载地址：云盘下载密码: p8lc 本软件来源于网络，仅供学习使用，请在24小时内删除，本人不承担任何相关责任！若侵犯某些组织或个人的权益，请联系我删除。]]></content>
      <categories>
        <category>Mac软件分享</category>
      </categories>
      <tags>
        <tag>软件分享</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ImageOptim-无损图片压缩Mac版]]></title>
    <url>%2FImageOptim-%E6%97%A0%E6%8D%9F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9Mac%E7%89%88%2F</url>
    <content type="text"><![CDATA[简介：ImageOptim 是一款小巧免费且开源的 Mac 图片无损压缩优化工具。默认设置下，它的压缩号称是「无损」的，也就是说画质不会被改变，但体积却可以被减小，堪称神器！ 教程ImageOptim 支持 PNG、JPG、GIF 格式的图片压缩优化，你只需将文件拖放到它的界面上即可完成优化 (PS：处理后会覆盖原图 / 原图被移到垃圾桶，可手工恢复)，支持批量，使用上非常简单方便。 效果比对： 下载地址：官方下载]]></content>
      <categories>
        <category>Mac软件分享</category>
      </categories>
      <tags>
        <tag>软件分享</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用PS修改GIF动图循环播放次数]]></title>
    <url>%2F%E7%94%A8PS%E4%BF%AE%E6%94%B9GIF%E5%8A%A8%E5%9B%BE%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE%E6%AC%A1%E6%95%B0%2F</url>
    <content type="text"><![CDATA[用Photoshop（Mac中文完美版下载地址）修改GIF动图循环播放次数，一次、三次、无限次循环播放…其实很容易。 教程 用Photoshop打开GIF动图，选择【文件】-&gt;【导出】-&gt;【存储为Web所用格式】，如下： 动画循环选项，选择【永远】或【1次】，存储，如下：]]></content>
      <categories>
        <category>IT实用技能</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>GIF</tag>
        <tag>PS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac屏幕录制GIF动图]]></title>
    <url>%2FMac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[在 Mac 上最方便的录制屏幕 GIF 动图的方式就是利用 QQ 软件的录屏功能。 效果图： 教程 鼠标放在 QQ 聊天窗口中的“捕捉屏幕”上，选中“录屏”，如下： 选择想要录屏的区域，如下： 点击【开始录制】，如下： 随后会显示之前录制的视频，选择【下载】，如下： 在保存格式中选择 gif ，点击【存储】，如下： 得到 GIF 动图，如下： 后记： 此时得到的 GIF 动图大小为1.9M，如果想对其大小做简单的压缩，可以用Mac自带的预览打开它。选择【文件】中的【导出】选项，如下： 导出格式选择 gif ，点击【存储】，如下： 可以看到，大小由原来的1.9M压缩为197K，如下： 但是，如此大的压缩比，牺牲的是 GIF 无限循环播放的能力。 如果不在意 GIF 动图仅能播放一次，那么可以使用此方法压缩； 如果想要无限循环播放，又想极致压缩，请移步 用PS修改GIF动图循环播放次数 和 ImageOptim-无损图片压缩Mac版]]></content>
      <categories>
        <category>IT实用技能</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>GIF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之网站标题栏背景变色]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E6%A0%8F%E8%83%8C%E6%99%AF%E5%8F%98%E8%89%B2%2F</url>
    <content type="text"><![CDATA[效果图： 教程打开themes/next/source/css/_custom/custom.styl，在里面新增如下代码：123.site-meta &#123; background: $blue; //天空的颜色，和我的眼镜是绝配&#125;]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题美化之顶部加载进度条]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1%2F</url>
    <content type="text"><![CDATA[效果图： 教程 进入博客文件夹的/themes/next文件夹下 1cd /themes/next 下载安装Progress module，如下 1git clone https://github.com/theme-next/theme-next-pace source/lib/pace 在/themes/next/_config.yml中设置，如下 123456789# Progress bar in the top during page loading.# Dependencies: https://github.com/theme-next/theme-next-pacepace: true #是否开启进度条# Themes list:# pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom# pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator# pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal# For examplepace_theme: pace-theme-center-atom #选择进度条样式 不同的样式效果图： pace-theme-big-counter pace-theme-bounce pace-theme-barber-shop pace-theme-center-atom pace-theme-center-circle pace-theme-center-radar pace-theme-center-simple pace-theme-corner-indicator pace-theme-fill-left pace-theme-flash pace-theme-loading-bar pace-theme-mac-osx pace-theme-minimal 后记： 我的网络时好时坏的，所以进度条也是录的时快时慢，请大家见谅。 想知道怎么在Mac下高效的制作gif动图的小伙伴请移步至 Mac屏幕录制GIF动图 为了让大家可以直观的查看进度条的效果，因此我录制了gif动图，如果您觉得这对您有帮助，请随意打赏或评论点赞，谢谢大家。]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Node.js安装教程]]></title>
    <url>%2FNodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[什么是Node.jsNodeJS官网上的介绍： Node.js is a platform built on Chrome’s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices. 它是一个Javascript运行环境 依赖于Chrome V8引擎进行代码解释 事件驱动 非阻塞I/O（NodeJS遇到I/O事件会创建一个线程去执行，然后主线程会继续往下执行的） 轻量、可伸缩，适于实时数据交互应用 单进程，单线程 Node.js的优缺点NodeJS适合运用在高并发、I/O密集、少量业务逻辑的场景（高并发、聊天、实时消息推送） 优点： 高并发（最重要的优点） NodeJs更改连接到服务器的方式，每个连接发射（emit）一个在NodeJS引擎进程中运行的事件（Event），放进事件队列当中，而不是为每个连接生成一个新的OS线程（并为其分配一些配套内存） 适合I/O密集型应用 缺点： 不适合CPU密集型应用；CPU密集型应用给Node带来的挑战主要是：由于JavaScript单线程的原因，如果有长时间运行的计算（比如大循 环），将会导致CPU时间片不能释放，使得后续I/O无法发起； 解决方案：分解大型运算任务为多个小任务，使得运算能够适时释放，不阻塞I/O调用的发起。 只支持单核CPU，不能充分利用CPU； 可靠性低，一旦代码某个环节崩溃，整个系统都崩溃（原因：单进程，单线程）； 解决方案： Nnigx反向代理，负载均衡，开多个进程，绑定多个端口； 开多个进程监听同一个端口，使用cluster模块。 Debug不方便，错误没有stack trace。 Node.js的安装 访问 Node.js 下载地址：https://nodejs.org/zh-cn/ ，下载最新版本。 双击刚才下载文件，按照步骤默认安装。 Node.js和npm安装完成。 安装完成后打开终端，输入12npm -vnode -v 两个命令，如下图出现版本信息，说明安装成功。]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>NodeJs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git安装教程]]></title>
    <url>%2FGit%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[打开终端，输入1git --version 系统提示安装git 待安装完毕，在终端再次输入1git --version 如下图出现版本信息，说明安装成功。]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何使用Hexo创建个人博客]]></title>
    <url>%2F%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装 安装 Hexo 比较简单，但在安装前，需要安装如下应用程序。（如果您已经安装了如下程序，请直接执行第2步。） Node.js （安装教程） Git （安装教程） 安装Hexo，打开终端，输入1npm install -g hexo-cli 建站安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中创建博客框架。12hexo init &lt;folder&gt;cd &lt;folder&gt; 新建完成后，指定文件夹的目录如下： _config.yml =&gt; 网站的 配置 信息，您可以在此配置大部分的参数。 package.json =&gt; 应用程序的信息。 scaffolds =&gt; 模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。 source =&gt; 资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。 themes =&gt; 主题文件夹。Hexo 会根据主题来生成静态页面。 预览 生成静态文件。在终端中输入 1hexo generate 启动服务器。在终端中输入 1hexo server 默认情况下，在浏览器中访问网址： http://localhost:4000/ 即可预览个人博客。 写作你可以执行下列命令来创建一篇新文章。1hexo new &lt;title&gt; 部署 安装 hexo-deployer-git。 1npm install hexo-deployer-git --save 修改配置。 12345deploy: type: git repo: &lt;repository url&gt; #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io branch: [branch] #published message: [message] 参数 描述 repo 库（Repository）地址 branch 分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。 message 自定义提交信息 (默认为 Site updated: YYYY-MM-DD HH:mm:ss) 生成站点文件并推送至远程库。执行命令。1hexo clean &amp;&amp; hexo deploy 前者清除站点文件，后者重新生成站点文件并将之推送到指定的库分支。]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
